#if (NETSTANDARD2_0 || NETSTANDARD1_6 || NETSTANDARD1_5 || NETSTANDARD1_4 || NETSTANDARD1_3 || NET45 || NET40 || NET451 || NET452 || NET46 || NET461 || NET462)
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Security.Cryptography;

namespace PRI.ProductivityExtensions.ICryptoTransformExtensions
{

	/// <summary>
	/// Class that contains extension methods that extend <seealso cref="System.Security.Cryptography.ICryptoTransform">ICryptoTransform</seealso>
	/// </summary>
	public static partial class ICryptoTransformable
	{
		/// <summary>
		/// Extends TransformBlock so that buffer offset of 0 and call to Array.Length are not needed.
		/// <example>
		/// icryptotransform.TransformBlock(inputBuffer, outputBuffer, outputOffset);
		/// </example>
		/// </summary>
		public static Int32 TransformBlock(this ICryptoTransform icryptotransform, Byte[] inputBuffer, Byte[] outputBuffer, Int32 outputOffset)
		{
			if(icryptotransform == null) throw new ArgumentNullException("icryptotransform");

			if(inputBuffer == null) throw new ArgumentNullException("inputBuffer");

			return icryptotransform.TransformBlock(inputBuffer, 0, inputBuffer.Length, outputBuffer, outputOffset);
		}

		/// <summary>
		/// Extends TransformFinalBlock so that buffer offset of 0 and call to Array.Length are not needed.
		/// <example>
		/// icryptotransform.TransformFinalBlock(inputBuffer);
		/// </example>
		/// </summary>
		public static Byte[] TransformFinalBlock(this ICryptoTransform icryptotransform, Byte[] inputBuffer)
		{
			if(icryptotransform == null) throw new ArgumentNullException("icryptotransform");

			if(inputBuffer == null) throw new ArgumentNullException("inputBuffer");

			return icryptotransform.TransformFinalBlock(inputBuffer, 0, inputBuffer.Length);
		}

	}
}
#endif