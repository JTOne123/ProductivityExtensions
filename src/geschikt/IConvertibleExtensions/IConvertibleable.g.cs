#if (NETSTANDARD2_0 || NETSTANDARD1_6 || NETSTANDARD1_5 || NETSTANDARD1_4 || NETSTANDARD1_3 || NETSTANDARD1_2 || NETSTANDARD1_1 || NET45 || NET40 || NET451 || NET452 || NET46 || NET461 || NET462)
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace PRI.ProductivityExtensions.IConvertibleExtensions
{

	/// <summary>
	/// Class that contains extension methods that extend <seealso cref="System.IConvertible">IConvertible</seealso>
	/// </summary>
	public static partial class IConvertibleable
	{
		/// <summary>
		/// Extends ToType so that methods that return a specific type object given a Type parameter can be
		/// used as generic method and casting is not required.
		/// <example>
		/// iconvertible.ToType&lt;int&gt;(provider);
		/// </example>
		/// </summary>
		public static T ToType<T>(this IConvertible iconvertible, IFormatProvider provider)
		{
			if(iconvertible == null) throw new ArgumentNullException("iconvertible");

			return (T)iconvertible.ToType(typeof(T), provider);
		}

	}
}
#endif