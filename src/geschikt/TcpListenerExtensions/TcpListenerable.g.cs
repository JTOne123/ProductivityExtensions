#if (NETSTANDARD2_0 || NETSTANDARD1_6 || NETSTANDARD1_5 || NETSTANDARD1_4 || NETSTANDARD1_3 || NET45 || NET40 || NET451 || NET452 || NET46 || NET461 || NET462)
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Net.Sockets;

namespace PRI.ProductivityExtensions.TcpListenerExtensions
{

	/// <summary>
	/// Class that contains extension methods that extend <seealso cref="System.Net.Sockets.TcpListener">TcpListener</seealso>
	/// </summary>
	public static partial class TcpListenerable
	{
#if (NETSTANDARD2_0 || NET45 || NET40 || NET451 || NET452 || NET46 || NET461 || NET462)
		/// <summary>
		/// Extends BeginAcceptSocket so that when a state object is not needed, null does not need to be passed.
		/// <example>
		/// tcplistener.BeginAcceptSocket(callback);
		/// </example>
		/// </summary>
		public static IAsyncResult BeginAcceptSocket(this TcpListener tcplistener, AsyncCallback callback)
		{
			if(tcplistener == null) throw new ArgumentNullException("tcplistener");

			return tcplistener.BeginAcceptSocket(callback, null);
		}

		/// <summary>
		/// Extends BeginAcceptTcpClient so that when a state object is not needed, null does not need to be passed.
		/// <example>
		/// tcplistener.BeginAcceptTcpClient(callback);
		/// </example>
		/// </summary>
		public static IAsyncResult BeginAcceptTcpClient(this TcpListener tcplistener, AsyncCallback callback)
		{
			if(tcplistener == null) throw new ArgumentNullException("tcplistener");

			return tcplistener.BeginAcceptTcpClient(callback, null);
		}
#endif
	}
}
#endif