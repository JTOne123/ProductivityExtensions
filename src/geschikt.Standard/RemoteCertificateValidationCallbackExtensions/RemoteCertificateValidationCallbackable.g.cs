#if (NETSTANDARD2_0 || NET45 || NET40 || NET451 || NET452 || NET46 || NET461 || NET462)
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Net.Security;

namespace PRI.ProductivityExtensions.RemoteCertificateValidationCallbackExtensions
{

	/// <summary>
	/// Class that contains extension methods that extend <seealso cref="System.Net.Security.RemoteCertificateValidationCallback">RemoteCertificateValidationCallback</seealso>
	/// </summary>
	public static partial class RemoteCertificateValidationCallbackable
	{
		/// <summary>
		/// Extends BeginInvoke so that when a state object is not needed, null does not need to be passed.
		/// <example>
		/// remotecertificatevalidationcallback.BeginInvoke(sender, certificate, chain, sslPolicyErrors, callback);
		/// </example>
		/// </summary>
		public static IAsyncResult BeginInvoke(this RemoteCertificateValidationCallback remotecertificatevalidationcallback, Object sender, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Security.Cryptography.X509Certificates.X509Chain chain, SslPolicyErrors sslPolicyErrors, AsyncCallback callback)
		{
			if(remotecertificatevalidationcallback == null) throw new ArgumentNullException("remotecertificatevalidationcallback");

			return remotecertificatevalidationcallback.BeginInvoke(sender, certificate, chain, sslPolicyErrors, callback, null);
		}

	}
}
#endif